
plugins{
    id 'com.android.application'
    id  'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {

    compileSdkVersion Config.compileSdkVersion
    buildToolsVersion Config.buildToolsVersion

    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false

    defaultConfig {
        applicationId Config.applicationId
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode Config.versionCode
        versionName Config.versionName
    }
    signingConfigs {
        release {
            keyAlias 'jack'
            keyPassword '123456'
            storeFile file('../jack.keystore')
            storePassword '123456'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility Config.sourceCompatibilityVersion
        targetCompatibility Config.targetCompatibilityVersion
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation BuildDependencies.junit

    implementation AndroidX.appCompat
    implementation AndroidX.multidex
    implementation AndroidX.material
    implementation AndroidX.recyclerview
    implementation AndroidX.cardview
    implementation AndroidX.annotationX
    implementation AndroidX.constraintlayout
    implementation AndroidX.core
    implementation AndroidX.coreKtx

    implementation BuildDependencies.photoView
    implementation BuildDependencies.immersionbar
    implementation BuildDependencies.glide
    kapt BuildDependencies.glideCompiler
    implementation BuildDependencies.butterknife
    kapt BuildDependencies.butterknifeCompiler
    implementation BuildDependencies.magicIndicator
    implementation BuildDependencies.lottie
    implementation BuildDependencies.commonHelper

}
